From 101ee829666d8af6e68fd61b5bee35934293af60 Mon Sep 17 00:00:00 2001
From: Yurii Rashkovskii <me@yrashk.com>
Date: Fri, 16 Feb 2018 11:44:58 +0700
Subject: [PATCH] Problem: annoying error in sit-web's console

It keeps complaining about trying to load `prims-.js` (which is returned
as an HTML file, because whatever can't be found is routed to
/index.html to enable Single Page Application experience)

Solution: make sure this requets never happens

It only happens because at some point `lang` might be an empty
string and that empty string gets into the URL.

Don't do the request if `lang` is empty.
---
 sit-web/webapp/src/issue/rendered-text.html | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/sit-web/webapp/src/issue/rendered-text.html b/sit-web/webapp/src/issue/rendered-text.html
index 1b08d9d..3c4498c 100644
--- a/sit-web/webapp/src/issue/rendered-text.html
+++ b/sit-web/webapp/src/issue/rendered-text.html
@@ -10,8 +10,10 @@
        <link rel="stylesheet" href="/bower_components/prism/themes/prism.css">
        <style include="rendered-text-style"></style>
 
-       <iron-ajax auto url="/bower_components/prism/components/prism-[[lang]].js"
-                  handle-as="text" on-response="loadSyntax"></iron-ajax>
+       <template is="dom-if" if="[[ langDefined ]]">
+           <iron-ajax auto url="/bower_components/prism/components/prism-[[lang]].js"
+                      handle-as="text" on-response="loadSyntax"></iron-ajax>
+       </template>
 
        <prism-highlighter></prism-highlighter>
        <marked-element markdown="{{ text }}">
@@ -28,14 +30,24 @@
                         type: String
                     },
                     lang: {
-                        type: String
+                        type: String,
+                    },
+                    langDefined: {
+                        type: Boolean,
+                        computed: 'computeLangDefined(lang)'
                     }
                 }
             }
+
             constructor() {
                 super();
                 this.lang = "markdown";
             }
+
+            computeLangDefined(lang) {
+                return typeof lang === 'string' && lang !== '';
+            }
+
             loadSyntax(evt, req) {
                 eval(req.response);
                 // New String is allocated so that an
-- 
2.15.0

