#!/usr/bin/env bash

item=$1
mr=$2
comment=$3
tmpdir="$(mktemp -d)"
curdir=$(pwd)
editor=${EDITOR:-nano}
curbranch=$(git rev-parse --abbrev-ref HEAD)
sit=${SIT}

if [ -z ${item} ]; then
        echo "Usage: sit mr-merge <item> <mr> [comment]"
        exit 1
fi

if [ -z ${mr} ]; then
        echo "Usage: sit mr-merge <item> <mr> [comment]"
        exit 1
fi

repo=$(${sit} path)

if [ "${curbranch}" != "merge-${item}-${mr}" ]; then
        git checkout -b merge-${item}-${mr} || exit 2
        git am -3 $(ls ${repo}/items/${item}/${mr}/git/*.patch) || exit 2
else
        echo "Reusing current merge branch"
        # Find the branch we forked from
        forkpoint=$(git merge-base --fork-point HEAD)
        curbranch=$(git branch --contains ${forkpoint}~ --points-at ${forkpoint}~)
fi

pushd $(pwd) >/dev/null
cd "${tmpdir}"

echo "${mr}" > record
if [ -z "${comment}" ]; then
        ${sit} -d ${curdir} record -t Merged,Closed ${item} record || exit 2
else
        echo "# Leave a comment below. All lines starting with # will be removed" > text
        echo "${comment}" >> text
        $editor text || exit 2
        sed -i '/^#/ d'  text
        ${sit} -d ${curdir} record -t Commented,Merged,Closed ${item} text record || exit 2
fi

popd >/dev/null

rm -rf "${tmpdir}"

git add .sit/items/${item} || exit 2
git commit -m "Closed merge request ${item}/${mr}" || exit 2
git checkout ${curbranch} || exit 2
git merge --no-ff merge-${item}-${mr}

echo You can push to upstream now
